---
title: "Second Try - Tony"
format: pdf
editor: visual
---

## Library Packages

```{r}
#| warning: false
#| message: false 
library(forecast)
library(tidyverse)
library(ggplot2)
```

## Use different models to try

For the second try, we will try to use covariates

1.  let's try ARIMA with Fourier terms

```{r}
#| echo: false

# calculate the foureir terms first
foureir_term <- ts_combined[, 1] %>% 
  fourier(K = c(2, 12))

# combine foureir terms with humidity and temperature
covariates <- ts_combined[, c(2:3)] %>% 
  cbind(foureir_term)

covariates_train <- covariates %>% subset(end = 2191-365)
covariates_test <- covariates %>% subset(start = 2191-365+1)
# model with autoarima and covariates
arima.four.cov <- ts_load_train %>% 
  auto.arima(xreg = covariates_train)

# forecast 2010 with autoarima
forecast.arima.four.cov <- forecast(arima.four.cov, 
                                    h = 365, 
                                    xreg = covariates_test)

# calculate its accuracy
performance.arima.four.cov <- accuracy(forecast.arima.four.cov$mean,
                                       ts_load_test
                                       )
```

2.  try STL models with fourier terms and covariates

```{r}
stl.four.cov <- stlm(ts_load_train,
                    s.window = "periodic",
                    method = "arima",
                    xreg = covariates_train)

forecast.stl.four.cov <- forecast(stl.four.cov,
                                  h = 365,
                                  xreg = covariates_test)

performance.stl.four.cov <- accuracy(ts_load_test, forecast.stl.four.cov$mean)
```

## Compare model performance

```{r}
scores_try2 <- performance.stl.four.cov %>% 
  rbind(performance.arima.four.cov)

row.names(scores_try2) <- c("STL with Fourier and Covariates",
                            "SARIMA with Fourier and Covariates")

best_model_index <- which.min(scores_try2[,"RMSE"])
cat("The best model by RMSE is:", row.names(scores_try2[best_model_index,]))   
```

## Model and Forecast Covariates

```{r}

# graph two covariates
plot(ts_combined[, 2:3])
  # strong seasonality

# retrieve coviariates
ts_covariates <- ts_combined[, 2:3] %>% 
  ts(frequency = 365.25, start = c(2005, 1, 1))

ts_cov_train <- ts_covariates %>% subset(end = 2191-365)
ts_cov_test <- ts_covariates %>% subset(start = 2191-365+1)
# use SARIMA with fourier and stl+ets model humidity and check which one has the best performance

## SARIMA
sarima_hum_model <- auto.arima(ts_cov_train[, 1], 
                               xreg = fourier(ts_cov_train[, 1],
                                              K = 7))
sarima_hum_perf <- sarima_hum_model %>% 
  forecast(h = 365,
           xreg = fourier(ts_cov_train[, 1], 
                          K = 7, 
                          h = 365)
           )

sarima_hum_score <- accuracy(sarima_hum_perf$mean, ts_cov_test[, 1])

## stl+ets 
stl_hum_perf <- stlf(ts_cov_train[, 1], h = 365)

stl_hum_score <- accuracy(stl_hum_perf$mean, ts_cov_test[, 1])

humidity_scores <- rbind(sarima_hum_score, stl_hum_score)
row.names(humidity_scores) <- c("SARIMA", "STL")

humidity_scores
  # SARIMA is better for humidity

# use SARIMA with fourier and stl+ets model temperature and check which one has the best performance

## SARIMA
sarima_tem_model <- auto.arima(ts_cov_train[, 2], 
                               xreg = fourier(ts_cov_train[, 2],
                                              K = 7))
sarima_tem_perf <- sarima_tem_model %>% 
  forecast(h = 365,
           xreg = fourier(ts_cov_train[, 2], 
                          K = 7, 
                          h = 365)
           )

sarima_tem_score <- accuracy(sarima_tem_perf$mean, ts_cov_test[, 2])

## stl+ets 
stl_tem_perf <- stlf(ts_cov_train[, 2], h = 365)

stl_tem_score <- accuracy(stl_tem_perf$mean, ts_cov_test[, 2])

temperature_scores <- rbind(sarima_tem_score, stl_tem_score)
row.names(temperature_scores) <- c("SARIMA", "STL")

temperature_scores

# SARIMA is better

```

## Forecast Covariates

```{r}
# forecast temperature
tem_fore <- ts_covariates[,2] %>% 
  auto.arima(xreg = fourier(ts_covariates[,2],
                            K = 7)
             ) %>% 
  forecast(h = 31, 
           xreg = fourier(ts_covariates[,2],
                          K = 7,
                          h =31)
           )
```

## Forecast with SARIMA with Covariates

```{r}
arima_four_cov_2011 <- ts_load %>% 
  auto.arima(xreg = covariates) %>% 
  forecast(h = 31)
```
